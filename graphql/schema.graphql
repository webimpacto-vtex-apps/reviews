type Review {
  reviewId: Int
  approved: Boolean
  comment: String
  locale: String!
  name: String
  productId: Int!
  score: Float!
  id: String
}

type ProductReviewFile{
  cont: Int
  average: Float
}

input ReviewInput {
  reviewId: Int
  approved: Boolean
  comment: String
  locale: String
  name: String
  productId: Int
  score: Float
  id: String
}

type Query {
  appSettings: Settings @cacheControl(scope: PUBLIC, maxAge: MEDIUM)

  productReviews(productId: Int!, approved: Boolean ,locale: String, appSettings: Boolean): [Review] # @cacheControl(scope: PUBLIC, maxAge: MEDIUM)
  adminReviews(productId: Int, from: Int, to: Int, locale: String, approved: Boolean, notapproved: Boolean): [Review] # @cacheControl(scope: PUBLIC, maxAge: MEDIUM)
  adminReview(reviewId: Int): Review # @cacheControl(scope: PUBLIC, maxAge: MEDIUM)
  getProductReviewFile(id: Int): ProductReviewFile # @cacheControl(scope: PUBLIC, maxAge: MEDIUM)
  #profile(
    #customFields: String
  #): Profile @cacheControl(scope: PRIVATE) @withCurrentProfile
  #getReviews(productId: String): String 
  #getProductReviewOverall(productId: String): Array
}

type Mutation {
  saveReview(review:ReviewInput!):Review
}

type Settings {
  storeId: String
  productBinding: String
  IconColor: String
}
